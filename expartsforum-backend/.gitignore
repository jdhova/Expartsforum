
 node_ module
package-lock.json
node_modules/
keys.js



 node_ module
package-lock.json
node_modules/
keys.js


router.get ('/' app.get findOne needs to be rechecked



const express = require('express');
const Image = require('../../models/Image');
const Profile = require('../../models/Profile');
const ImageRouter = express.Router();
const multer = require ('multer');
const router = express.Router()
const path = require('path')
const crypto = require('crypto')
const mongoose = require('mongoose')
const GridFsStorage = require('multer-gridfs-storage')
const Grid = require('gridfs-stream')
const methodOverride = require('method-override')
const bodyParser = require('body-parser')
const passport = require ('passport');
const jwtStrategy = require('passport-jwt').Strategy
 const fs = require('fs')




router.use(bodyParser.json())
router.use(bodyParser.json({limit: "50mb"}));
router.use(bodyParser.urlencoded({limit: "50mb", extended: true, parameterLimit:50000}));
router.use(methodOverride('_method'))

// router.use(multer({ dest: "./uploads/",
//     rename: function (fieldname, filename) {
//     return filename;
//     },
//     }));



// const mongoURI = 'mongodb://localhost:27017/expartsforum'

// const conn = mongoose.createConnection(mongoURI)


    
//  let gfs
//         conn.once('open', () => {
//             //ini Stream
//             debugger
//             gfs = Grid(conn.db, mongoose.mongo);
//             gfs.collection('uploads');
//         })

// // set storage Engine

// const storage = new GridFsStorage({
//      url: mongoURI,
//     file:( req, file) => {
//         return new Promise(( resolve,reject) => {
//             crypto.randomBytes(16 ,(err,buf) =>{
//                 if(err) {
//                     // return reject(err) 
//                     console.log(err,'error')  
//                 }
//                 const filename = buf.toString('hex') + path.extname(file.originalname)
                
//                 const fileInfo = {
//                     filename: filename,
//                     bucketName :'uploads'
//                 };
//                 resolve(fileInfo);
//             })
//         })
//     }
// })

//  const image = multer({storage})









//  router.post('/', image.single('multerImage'), (req,res) => {
//      res.json({file: req.file})
//  })



//  const Image = require('../../models/Image');

//  router.route('/')
// .post(image.single('file'), function(req, res) {
   
//     const new_img = new Image({
//         path :req.body.path,
//         caption: req.body.caption
//     });

//     // new_img.img.data = fs.readFileSync(req.file.path)
//     // new_img.img.contentType = 'image/jpeg';
//     new_img.save();

//     res.json({ message: 'New image added to the db!' });

// })

// router.route('/')
// .post(image.single('file'), function(req, res) {
    
//     Profile.findOne({user: req.user.id})
//         .then(profileImg => {
//             const new_img  = {
//                 path :req.body.path,
//                 caption: req.body.caption
//             }
//             // adds to the expirience array
//             profileImg.photo.unshift(new_img)
//             profileImg.save().then(profileImg => res.json(profileImg))

     






// router.route('/')
// .post(image.single('file'), function(req, res) {
   
//     const new_img = new Image({
//         path :req.body.path,
//         caption: req.body.caption
//     });

//     // new_img.img.data = fs.readFileSync(req.file.path)
//     // new_img.img.contentType = 'image/jpeg';
//     new_img.save();

//     res.json({ message: 'New image added to the db!' });

// })



    
/// maybe the correct one so far but returns undefined

// router.route('/', passport.authenticate('jwt',{session: false}))
// .post(image.single('file'), function(req,res) {

//         Profile.findOne ({user: req.user.id})

//             .then(profileImg =>{
//                 const new_img =  {
//                     path :req.body.path,
//                     caption: req.body.caption

//                     // data :req.body.data,
//                     // contentType: req.body.contentType
//                 }

//             profileImg.photo.unshift(new_img)
//             profileImg.save().then(profileImg => res.json(profileImg))
//             })
// })








// router.post('/',passport.authenticate('jwt',{session: false}),image.single('file'), function(req,res) {

//         Profile.findOne ({user: req.user.id})
//             .then(profileImg =>{

//                 var new_img = Profile ;
//                     new_img.img.data = fs.readFileSync(req.file.path)
//                     new_img.img.contentType = 'image/jpeg';
//                     // new_img.save();
//                 // const new_img = {
//                 //     data :req.body.data,
//                 //     contentType: req.body.contentType
//                 // }
//             profileImg.photo.unshift(new_img)
//             profileImg.save().then(profileImg => res.json(profileImg))
//       })
// })


// router.post('/',image.single('file'), function(req,res) {

    

//             const new_img = Profile ;
//                 // new_img.img.data = fs.readFileSync(req.body.path)
//                 new_img.img.contentType = 'image/jpeg';
//                 new_img.save();
//                 res.json({ message: 'New image added to the db!' });
//             // const new_img = {
//             //     data :req.body.data,
//             //     contentType: req.body.contentType
//             // }
        
  
// })





// router.route('/')
// .get(function (req,res) {
//     Image.findOne({}, 'img createdAt', function(err, img) {
//         if (err)
//             res.send(err);
//          console.log(img);
//         res.contentType('json');
//         res.send(img);
//     }).sort({ createdAt: 'desc' });
// });


module.exports = router;

